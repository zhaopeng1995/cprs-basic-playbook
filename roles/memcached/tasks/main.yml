---

- name: 卸载原有yum安装的memcached
  yum: name=memcached state=absent

- name: 判断memcached是否已经通过编译安装
  stat: path={{ memcached_basedir }}
  register: reg_memcached
  ignore_errors: yes
  tags: [memcached]
  
- name: copy memcached
  unarchive: src=memcached-{{memcached_version}}.tar.gz dest=/tmp
  when: not reg_memcached.stat.exists
  tags: [memcached]

- name: 安装memcached依赖包
  yum: name={{item}} state=latest
  with_items: [ libevent, libevent-devel, gcc, make, libselinux-python ]      
  when: not reg_memcached.stat.exists
  tags: [memcached]

- name: 上传memcached安装脚本
  template: src=install.sh.j2 dest=/tmp/memcached_install.sh owner=root group=root mode=777
  when: not reg_memcached.stat.exists
  tags: [memcached]

- name: 安装memcached
  shell:  /bin/bash /tmp/memcached_install.sh
  when: not reg_memcached.stat.exists
  tags: [memcached]

- name: 创建memcached系统用户
  user: name={{mem_user}} system=yes shell=/sbin/nologin home={{memcached_basedir}}
  when: not reg_memcached.stat.exists
  tags: [memcached]

- name: 创建目录
  file: path={{pid_file_path}} owner={{mem_user}} state=directory mode=0755
  when: not reg_memcached.stat.exists
  tags: [memcached]

- name: 创建软链接
  file: src={{memcached_basedir}}/bin/memcached dest=/usr/bin/memcached owner={{mem_user}} state=link 
  when: not reg_memcached.stat.exists
  tags: [memcached]

- name: Copy the SysVinit script on rl6
  template: src=memcached_initd.j2 dest=/etc/init.d/memcached mode=0755
  when: not reg_memcached.stat.exists and ansible_os_family == "RedHat" and ansible_distribution_major_version|int == 6
  tags: [memcached]


- name: Copy the Systemd script on rl7
  template: src=memcached_systemd.j2 dest=/etc/systemd/system/memcached.service mode=0755
  when: not reg_memcached.stat.exists and ansible_os_family == "RedHat" and ansible_distribution_major_version|int == 7 
  tags: [memcached]


- name: Copy the client configuration file 
  template: src=memcached_sysconfig.j2 dest=/etc/sysconfig/memcached mode=0755
  when: not reg_memcached.stat.exists
  notify: 
   - restart memcached
  tags: [memcached]

- name: Set the max open file descriptors 
  sysctl: name=fs.file-max value={{ fs_file_max }} state=present
  when: not reg_memcached.stat.exists
  tags: [memcached]

- name: start the memcached service
  service: name=memcached state=started enabled=yes
  when: not reg_memcached.stat.exists
  tags: [memcached]

